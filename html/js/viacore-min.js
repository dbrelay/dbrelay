/* viacore */
/* sqlObject */

function viaductQuery(connection,sql,callback,query_tag){connection["sql"]=sql;if(query_tag!==undefined)connection["query_tag"]=query_tag;$.post('/sql',connection,callback,"json");};sqlObject=function(){function throwError(name,message,body,hard){if(window.console&&window.console.error){console.error({"name":name,"message":message,"body":body});};alert(message)
if(hard){throw{"name":name,"message":message,"body":body};};};var param_re=/{{{([""'']?\w+)}}}/g;var divid_re=/({{{[\'\"]?)|(}}})/g;var batches={queries:{},push:function(name,query){if(this.queries[name]){this.queries[name]+=";\n"+query;}else{this.queries[name]=query;};},empty:function(name){if(this.queries[name]){delete(this.queries[name]);};},get:function(name){if(this.queries[name]){return this.queries[name];}else{throwError("Non-existent batch","Non-existent batch "+name,null,true);};}};function quoteSingles(text){return text.replace(/'/g,"''");};function quoteDoubles(text){return text.replace(/"/g,'""');};function cook(string,params){return string.replace(param_re,function(match,word){var quoteFunc=undefined;if(word.charAt(0)=="'"){word=word.slice(1);quoteFunc=quoteSingles;};if(word.charAt(0)=='"'){word=word.slice(1);quoteFunc=quoteDoubles;};if(params[word]){return(quoteFunc?quoteFunc(params[word]):params[word]);}else{return'';};});};function get_params(query){var matches=query.match(param_re);for(m in matches){if(typeof(matches[m])!=='string')continue;matches[m]=matches[m].replace(divid_re,'');};return matches;};return function(connection,sql_queries){function exec(query,callback,tag){viaductQuery(connection,query,function(response){if(response.log.error){throwError("sqlError",response.log.error,{request:response.request,log:response.log});};if(callback){callback(response);}},tag);};var sqlObjectConstructor=function(){for(action in sql_queries){var action_body=sql_queries[action];if(typeof(action_body)=="string"){this.add_query(action,action_body);}else if(Object.prototype.toString.apply(action_body)=="[object Array]"&&action_body.length==2&&typeof(action_body[0])=='string'&&typeof(action_body[1])=='function'){this.add_query(action,action_body[0],action_body[1]);}else{var err=new Error();err.name="ArgumentError";err.message="Wrong paramaters. Expected either a string or an array of a string and a callback.";throw err;};};};sqlObjectConstructor.prototype={empty_batch:function(name){batches.empty(name);},verbs:function(){var verbs={};for(action in this){if(this.hasOwnProperty(action)){verbs[action]=this[action];};};return verbs;},add_query:function(action_name,action_body,default_callback){var that=this;this[action_name]=function(act_name,act_query){return function(params,callback_or_batch,tag){if(params&&typeof(params)=="object"){query=cook(act_query,params);}else{query=act_query;callback_or_batch=params;params=null;};if(callback_or_batch){if(typeof(callback_or_batch)=="function"){exec(query,callback_or_batch,that);}else{batches.push(callback_or_batch,query);};}else{exec(query,that[act_name].callback,tag);};};}(action_name,action_body);this[action_name].parameters=get_params(action_body);if(typeof(default_callback)=='function'){this[action_name].callback=default_callback;};},run_batch:function(batch_name,callback){exec(batches.get(batch_name),callback,this);batches.empty(batch_name);}};return(new sqlObjectConstructor());};}();/* sqlDbAccess */

sqlDbAccess=function(){return function(connection){var _log=[];var _sqlDbAccess=function(){var cn=connection.connection_name;connection.connection_name=(cn&&cn!=='')?cn:'';this.so=sqlObject(connection,{create_table:["create table {{{table}}} {{{columns}}}",this._onVerb],drop_table:["drop table {{{table}}}",this._onVerb],list_tables:["select * from INFORMATION_SCHEMA.tables where TABLE_TYPE='BASE TABLE' ORDER BY TABLE_NAME ASC",this._onVerb],fetch_all_rows:["select * from {{{table}}}",this._onVerb],fetch_rows:["select {{{columns}}} from {{{table}}} {{{where}}} {{{orderBy}}}",this._onVerb],get_columns:["SELECT COLUMN_NAME,IS_NULLABLE,DATA_TYPE,CHARACTER_MAXIMUM_LENGTH FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = '{{{table}}}'",this._onVerb],get_count:["SELECT COUNT({{{columns}}}) FROM {{{table}}} {{{where}}}",this._onVerb],row_add:["INSERT INTO {{{table}}} {{{columns}}} VALUES {{{values}}}",this._onVerb],delete_row:["DELETE FROM {{{table}}} WHERE {{{where}}}",this._onVerb],fetch_paged_rows:["select * from ("
+" Select ROW_NUMBER () OVER(Order By {{{orderBy}}}) as dbrelayRowNum, *"
+"  From (SELECT * FROM {{{table}}} {{{where}}}) dbrelayInnerp1"
+" ) dbrelayInnerp2"
+" WHERE dbrelayRowNum BETWEEN {{{minRow}}} and {{{maxRow}}}",this._onVerb],get_primary_keys:["select  c.COLUMN_NAME "
+"from  INFORMATION_SCHEMA.TABLE_CONSTRAINTS pk , "
+"INFORMATION_SCHEMA.KEY_COLUMN_USAGE c "
+"where pk.TABLE_NAME = '{{{table}}}' "
+"and CONSTRAINT_TYPE = 'PRIMARY KEY' "
+"and c.TABLE_NAME = pk.TABLE_NAME "
+"and c.CONSTRAINT_NAME = pk.CONSTRAINT_NAME",this._onVerb],update_row:["UPDATE {{{table}}} SET {{{setvalues}}} WHERE {{{where}}}",this._onVerb]});}
_sqlDbAccess.prototype={connection:connection,run:function(verb,cfg,callback,scope){if(!this.so[verb]){alert('"'+verb+'" is not a valid action.');return;}
this.so[verb].call(window,cfg||{},function(results){if(results.data){_log.push('<p style="color:blue">'+results.log.sql+'</p>');}
else{_log.push('<p style="color:red">FAIL: ('+(results.log.error||'Unknown Reason')+')'+results.log.sql+'</p>');}
if(callback){callback.call(scope||window,results);}});},getLog:function(){return _log;},clearLog:function(){_log=[];},testConnection:function(callback,scope){this.run('list_tables',{},function(resp){if(callback){callback.call(scope||window,this,resp.data?true:false);}},this);},executeSql:function(sql,callback,scope){viaductQuery(this.connection,sql,function(resp){if(callback){callback.call(scope||window,this,resp);}});},getTables:function(callback,scope){this.run('list_tables',{},function(resp){var rows=resp.data[0].rows,tableNames=[];for(var i=0;i<rows.length;i++){tableNames[i]=rows[i].TABLE_NAME;}
if(callback){callback.call(scope||window,this,resp,tableNames);}},this);},createTable:function(table,columns,callback,scope){this.run('create_table',{table:table,columns:'('+columns+')'},function(resp){if(callback){callback.call(scope||window,resp);}});},dropTable:function(table,callback,scope){this.run('drop_table',{table:table},callback,scope);},_onVerb:function(results){}}
return new _sqlDbAccess();}}();/* sqlDbAccess */

sqlTable=function(){return function(table,sqlDb){var _sqlTable=function(){this.sqlDb=sqlDb.connection?sqlDb:new sqlDbAccess(sqlDb);};_sqlTable.prototype={queryColumns:function(callback,scope){this.sqlDb.run('get_columns',{table:table},function(resp){if(!resp||!resp.data){return;}
var data=resp.data[0],count=data.count,rows=data.rows,columns=[];for(var i=0,len=rows.length;i<len;i++){var col=rows[i];columns[i]={name:col.COLUMN_NAME,required:col.IS_NULLABLE==='NO'?false:true,dataType:col.DATA_TYPE};}
this.tableColumns=columns;if(callback){callback.call(scope||window,this,resp,columns);}},this);},fetchAll:function(callback,scope){this.fetchRows(null,callback,scope);},fetchRows:function(cfg,callback,scope){cfg=cfg||{};this.sqlDb.run('fetch_rows',{table:table,columns:cfg.columns||'*',where:cfg.where?('WHERE '+cfg.where):'',orderBy:cfg.orderBy?'ORDER BY '+cfg.orderBy:''},function(results){if(callback){callback.call(scope||window,this,results);}},this);},fetchPagingRows:function(cfg,callback,scope){cfg=this.applyProperties(cfg||{},{columns:'*',recordStart:0,pagingSize:20,where:''});if(!cfg.orderBy){if(!this.tableColumns){this.queryColumns(function(sqlt,resp,columns){if(resp&&resp.data){cfg.orderBy=columns[0].name+' asc';this.fetchRows(cfg,callback,scope);}},this);return;}
else{cfg.orderBy=this.tableColumns[0].name+' asc';}}
if(typeof(cfg.recordStart)!=='number'||typeof(cfg.pagingSize)!=='number'){alert('recordStart and pagingSize should be numeric');return{};}
this.sqlDb.run('fetch_paged_rows',{columns:cfg.columns,where:cfg.where?'WHERE '+cfg.where:'',orderBy:cfg.orderBy,table:table,minRow:cfg.recordStart+'',maxRow:cfg.recordStart+cfg.pagingSize},function(results){if(callback){callback.call(scope||window,this,results,cfg);}},this);},addRows:function(rows,callback,scope){if(rows.length===0){return;}
var batch='add'+new Date().getTime();for(var i=0,len=rows.length;i<len;i++){var row=rows[i],values=[],columns=[];for(var k in row){values.push("'"+row[k].replace(/'/g,"\'")+"'");columns.push(k);}
sqlDb.so.row_add({table:table,columns:'('+columns.join(',')+')',values:'('+values.join(',')+')'},batch);}
try{sqlDb.so.run_batch(batch,function(resp){sqlDb.so.empty_batch(batch);if(callback){callback.call(scope||window,this,resp);}});}catch(e){}},safeSqlString:function(s){return"'"+s.replace(/'/g,"''")+"'";},deleteRows:function(rows,callback,scope){if(rows.length===0){return;}
var batch='delete'+new Date().getTime();for(var i=0,len=rows.length;i<len;i++){var row=rows[i],wheres=[];for(var k in row){wheres.push(k+"="+this.safeSqlString(row[k]))}
sqlDb.so.delete_row({table:table,where:'('+wheres.join(' AND ')+')'},batch);}
try{sqlDb.so.run_batch(batch,function(resp){sqlDb.so.empty_batch(batch);if(callback){callback.call(scope||window,this,resp);}});}catch(e){}},updateRows:function(set,wheres,callback,scope){if(set.length===0){return;}
var batch='update'+new Date().getTime();for(var i=0,len=set.length;i<len;i++){var values=set[i],valueparam=[],where='';for(var col in values){valueparam.push(col+"="+this.safeSqlString(values[col]));}
var wherecols=wheres[i];if(typeof(wherecols)==='string'){where=wherecols;}
else{var whereparam=[];for(var k in wherecols){whereparam.push(k+"="+this.safeSqlString(wherecols[k]));}
where=whereparam.join(' AND ');}
sqlDb.so.update_row({table:table,setvalues:valueparam.join(','),where:where},batch);}
try{sqlDb.so.run_batch(batch,function(resp){sqlDb.so.empty_batch(batch);if(callback){callback.call(scope||window,this,resp);}});}catch(e){}},queryPrimaryKeys:function(callback,scope){this.sqlDb.run('get_primary_keys',{table:table},function(resp){var rows=resp.data[0].rows,keys=[];for(var i=0;i<rows.length;i++){keys[i]=rows[i].COLUMN_NAME;}
this.pkeyColumns=keys;if(callback){callback.call(scope||window,this,resp,keys);}});},queryTotalRows:function(cfg,callback,scope){cfg=cfg||{};var where=cfg.where||{},whereparam=[];if(typeof(where)==='string'){whereparam='WHERE '+where;}
else{for(var w in where){whereparam.push(k+"="+this.safeSqlString(where[w]));}
whereparam=whereparam.length===0?'':'WHERE '+whereparam.join('AND')}
this.sqlDb.run('get_count',{table:table,columns:cfg.pkeys||'*',where:whereparam},function(resp){if(resp.data){var total=resp.data[0].rows[0][1];if(callback){callback.call(scope||window,this,resp,total);}}});},applyProperties:function(dest,src,overwrite){dest=dest||{};for(var p in src){if(overwrite||!dest[p]){dest[p]=src[p];}}
return dest;}};return new _sqlTable();}}();