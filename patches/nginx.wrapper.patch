--- auto/sources	2008-11-10 10:22:33.000000000 -0500
+++ auto/sources	2008-12-16 10:49:31.000000000 -0500
@@ -38,6 +38,7 @@
 
 
 CORE_SRCS="src/core/nginx.c \
+           src/core/dbrelay.c \
            src/core/ngx_log.c \
            src/core/ngx_palloc.c \
            src/core/ngx_array.c \
--- src/core/dbrelay.c  2008-12-23 07:31:40.000000000 -0500
+++ src/core/dbrelay.c	2008-12-16 10:04:33.000000000 -0500
@@ -0,0 +1,54 @@
+
+/*
+ * Copyright (C) Igor Sysoev
+ */
+
+
+#include <ngx_config.h>
+#include <ngx_core.h>
+#include <nginx.h>
+#include <getopt.h>
+#include <sys/ipc.h>
+#include "../../../../dbrelay/src/dbrelay.h"
+
+int ngx_cdecl ngx_main(int argc, char *const *argv);
+void ngx_http_dbrelay_exit_master(ngx_cycle_t *cycle);
+
+int ngx_cdecl
+main(int argc, char *const *argv)
+{
+     dbrelay_connection_t *buf;
+ 
+     static struct option long_options[] =
+     {
+        {"clean",     no_argument,       0, 'c'},
+        {0, 0, 0, 0}
+     };
+     /* getopt_long stores the option index here. */
+     int option_index = 0;
+     int c;
+     key_t key;
+     
+     do {
+        c = getopt_long(argc, argv, "", long_options, &option_index);
+     
+        switch (c)
+        {
+           case 'c': 
+              key = ftok(NGX_PREFIX, 1);
+              printf("Cleaning up old instance(s) shared mem key = %d.\n", (int) key );
+              ngx_http_dbrelay_exit_master(NULL);
+              exit(0); 
+              break;
+        }
+     } while(c!=-1);
+
+    // initialize shared memory and semaphore
+    if ((buf=dbrelay_get_shmem())==NULL) {
+       dbrelay_create_shmem();
+    } else {
+       dbrelay_release_shmem(buf);
+    }
+
+    return ngx_main(argc, argv);
+}
--- src/core/nginx.c	2008-11-11 11:17:45.000000000 -0500
+++ src/core/nginx.c	2008-12-16 06:55:02.000000000 -0500
@@ -189,7 +189,7 @@
 
 
 int ngx_cdecl
-main(int argc, char *const *argv)
+ngx_main(int argc, char *const *argv)
 {
     char             *p;
     ssize_t           n;
